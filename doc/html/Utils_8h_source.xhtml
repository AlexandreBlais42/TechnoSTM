<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TechnoSTM:  Fichier source de src/include/Utils.h</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">TechnoSTM
   </div>
   <div id="projectbrief">Un microscope atomique à effet tunnel</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li><li class="navelem"><a class="el" href="dir_b0856f6b0d80ccb263b2f415c91f9e17.xhtml">include</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">Utils.h</div></div>
</div><!--header-->
<div class="contents">
<a href="Utils_8h.xhtml">Aller à la documentation de ce fichier.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#ifndef UTILS_H</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="preprocessor">#define UTILS_H</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span> </div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="preprocessor">#include &lt;cassert&gt;</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="preprocessor">#include &lt;chrono&gt;</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span><span class="preprocessor">#include &lt;thread&gt;</span></div>
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno">    9</span><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span> </div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span><span class="keywordtype">char</span> <a class="code hl_function" href="Utils_8h.xhtml#af97f04f38b727b3b62c070523541a1ab">getHexCharacter</a>(<span class="keyword">const</span> uint8_t val);</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno">   21</span>std::string <a class="code hl_function" href="Utils_8h.xhtml#af5821342a676c43e1a11c4c0c274aed3">getHexString</a>(uint16_t data);</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span> </div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span><span class="keywordtype">void</span> <a class="code hl_function" href="Utils_8h.xhtml#a4ff75b6d8acb96f8ae024087ad9f7922">delay_ms</a>(<span class="keyword">const</span> uint32_t time);</div>
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno">   24</span> </div>
<div class="foldopen" id="foldopen00030" data-start="{" data-end="}">
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="Utils_8h.xhtml#a3a99af9e82c4e29d735c95844bcafbb3">   30</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; T <a class="code hl_function" href="Utils_8h.xhtml#a3a99af9e82c4e29d735c95844bcafbb3">invertBytes</a>(T data) {</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  T toReturn = 0;</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>  uint8_t *ptr = (uint8_t *)&amp;data;</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span>  <span class="keywordflow">for</span> (uint16_t _ = 0; _ &lt; <span class="keyword">sizeof</span>(data); _++) {</div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span>    toReturn &lt;&lt;= 8;</div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span>    toReturn += *ptr;</div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span>    ptr++;</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  }</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>  <span class="keywordflow">return</span> toReturn;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>}</div>
</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="foldopen" id="foldopen00041" data-start="{" data-end="}">
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno"><a class="line" href="Utils_8h.xhtml#a72b22cf0117b4160a48a3c97182116f0">   41</a></span><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt; std::vector&lt;uint8_t&gt; <a class="code hl_function" href="Utils_8h.xhtml#a72b22cf0117b4160a48a3c97182116f0">getBytes</a>(T data) {</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span>  uint8_t *bytes = <span class="keyword">reinterpret_cast&lt;</span>uint8_t *<span class="keyword">&gt;</span>(&amp;data);</div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span>  std::vector&lt;uint8_t&gt; toReturn(0);</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  toReturn.reserve(<span class="keyword">sizeof</span>(data));</div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>  toReturn.insert(toReturn.begin(), bytes, bytes + <span class="keyword">sizeof</span>(data));</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>  <span class="keywordflow">return</span> toReturn;</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span>}</div>
</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span> </div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span><span class="keywordtype">void</span> <a class="code hl_function" href="Utils_8h.xhtml#a4f229e0fc858bd3d9c3949f5f87923d6">writeStringToVector</a>(<span class="keyword">const</span> std::string &amp;s, std::vector&lt;uint8_t&gt; &amp;v);</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span> </div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span><span class="preprocessor">#endif </span><span class="comment">// UTILS_H</span></div>
<div class="ttc" id="aUtils_8h_xhtml_a3a99af9e82c4e29d735c95844bcafbb3"><div class="ttname"><a href="Utils_8h.xhtml#a3a99af9e82c4e29d735c95844bcafbb3">invertBytes</a></div><div class="ttdeci">T invertBytes(T data)</div><div class="ttdef"><b>Definition</b> <a href="Utils_8h_source.xhtml#l00030">Utils.h:30</a></div></div>
<div class="ttc" id="aUtils_8h_xhtml_a4f229e0fc858bd3d9c3949f5f87923d6"><div class="ttname"><a href="Utils_8h.xhtml#a4f229e0fc858bd3d9c3949f5f87923d6">writeStringToVector</a></div><div class="ttdeci">void writeStringToVector(const std::string &amp;s, std::vector&lt; uint8_t &gt; &amp;v)</div><div class="ttdef"><b>Definition</b> <a href="Utils_8cpp_source.xhtml#l00032">Utils.cpp:32</a></div></div>
<div class="ttc" id="aUtils_8h_xhtml_a4ff75b6d8acb96f8ae024087ad9f7922"><div class="ttname"><a href="Utils_8h.xhtml#a4ff75b6d8acb96f8ae024087ad9f7922">delay_ms</a></div><div class="ttdeci">void delay_ms(const uint32_t time)</div><div class="ttdef"><b>Definition</b> <a href="Utils_8cpp_source.xhtml#l00025">Utils.cpp:25</a></div></div>
<div class="ttc" id="aUtils_8h_xhtml_a72b22cf0117b4160a48a3c97182116f0"><div class="ttname"><a href="Utils_8h.xhtml#a72b22cf0117b4160a48a3c97182116f0">getBytes</a></div><div class="ttdeci">std::vector&lt; uint8_t &gt; getBytes(T data)</div><div class="ttdef"><b>Definition</b> <a href="Utils_8h_source.xhtml#l00041">Utils.h:41</a></div></div>
<div class="ttc" id="aUtils_8h_xhtml_af5821342a676c43e1a11c4c0c274aed3"><div class="ttname"><a href="Utils_8h.xhtml#af5821342a676c43e1a11c4c0c274aed3">getHexString</a></div><div class="ttdeci">std::string getHexString(uint16_t data)</div><div class="ttdoc">Obtiens la représentation hexadécimal du de la donnée passée.</div><div class="ttdef"><b>Definition</b> <a href="Utils_8cpp_source.xhtml#l00011">Utils.cpp:11</a></div></div>
<div class="ttc" id="aUtils_8h_xhtml_af97f04f38b727b3b62c070523541a1ab"><div class="ttname"><a href="Utils_8h.xhtml#af97f04f38b727b3b62c070523541a1ab">getHexCharacter</a></div><div class="ttdeci">char getHexCharacter(const uint8_t val)</div><div class="ttdoc">Retourne l'équivalent hexadécimal de l'argument.</div><div class="ttdef"><b>Definition</b> <a href="Utils_8cpp_source.xhtml#l00003">Utils.cpp:3</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Généré par&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
