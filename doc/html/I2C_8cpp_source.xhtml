<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="fr">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=11"/>
<meta name="generator" content="Doxygen 1.9.8"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TechnoSTM:  Fichier source de src/I2C.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr id="projectrow">
  <td id="projectalign">
   <div id="projectname">TechnoSTM
   </div>
   <div id="projectbrief">Un microscope atomique à effet tunnel</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.9.8 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
var searchBox = new SearchBox("searchBox", "search/",'.xhtml');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(function() {
  initMenu('',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */
</script>
<div id="main-nav"></div>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:d3d9a9a6595521f9666a5e94cc830dab83b65699&amp;dn=expat.txt MIT */
$(document).ready(function() { init_codefold(0); });
/* @license-end */
</script>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<div id="MSearchResults">
<div class="SRPage">
<div id="SRIndex">
<div id="SRResults"></div>
<div class="SRStatus" id="Loading">Chargement...</div>
<div class="SRStatus" id="Searching">Recherche...</div>
<div class="SRStatus" id="NoMatches">Aucune correspondance</div>
</div>
</div>
</div>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle"><div class="title">I2C.cpp</div></div>
</div><!--header-->
<div class="contents">
<a href="I2C_8cpp.xhtml">Aller à la documentation de ce fichier.</a><div class="fragment"><div class="line"><a id="l00001" name="l00001"></a><span class="lineno">    1</span><span class="preprocessor">#include &quot;<a class="code" href="I2C_8h.xhtml">I2C.h</a>&quot;</span></div>
<div class="line"><a id="l00002" name="l00002"></a><span class="lineno">    2</span><span class="comment">/*  Ce fichier ce décompose en deux parties: le code pour le raspberry pi</span></div>
<div class="line"><a id="l00003" name="l00003"></a><span class="lineno">    3</span><span class="comment"> * (#ifdef __arm__) et le code pour les autres ordi. Le code doit être séparé</span></div>
<div class="line"><a id="l00004" name="l00004"></a><span class="lineno">    4</span><span class="comment"> * car les ordinateurs n&#39;ont pas accès au GPIO comme le raspberry pi et il</span></div>
<div class="line"><a id="l00005" name="l00005"></a><span class="lineno">    5</span><span class="comment"> * serait impossible de le compiler sinon.</span></div>
<div class="line"><a id="l00006" name="l00006"></a><span class="lineno">    6</span><span class="comment"> */</span></div>
<div class="line"><a id="l00007" name="l00007"></a><span class="lineno">    7</span><span class="preprocessor">#ifdef __arm__</span></div>
<div class="line"><a id="l00008" name="l00008"></a><span class="lineno">    8</span> </div>
<div class="foldopen" id="foldopen00009" data-start="{" data-end="}">
<div class="line"><a id="l00009" name="l00009"></a><span class="lineno"><a class="line" href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">    9</a></span><a class="code hl_function" href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">I2C::I2C</a>(<span class="keyword">const</span> uint8_t deviceAddr) {</div>
<div class="line"><a id="l00010" name="l00010"></a><span class="lineno">   10</span>  <a class="code hl_variable" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a> = <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">wiringPiI2CSetup</a>(<a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">deviceAddr</a>);</div>
<div class="line"><a id="l00011" name="l00011"></a><span class="lineno">   11</span>  <span class="keywordflow">if</span> (!<a class="code hl_variable" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>) {</div>
<div class="line"><a id="l00012" name="l00012"></a><span class="lineno">   12</span>    std::cout &lt;&lt; <span class="stringliteral">&quot;wiringPiI2CSetup n&#39;a pas pu être initialisé&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a id="l00013" name="l00013"></a><span class="lineno">   13</span>    <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">exit</a>(1);</div>
<div class="line"><a id="l00014" name="l00014"></a><span class="lineno">   14</span>  }</div>
<div class="line"><a id="l00015" name="l00015"></a><span class="lineno">   15</span>}</div>
</div>
<div class="line"><a id="l00016" name="l00016"></a><span class="lineno">   16</span> </div>
<div class="foldopen" id="foldopen00017" data-start="{" data-end="}">
<div class="line"><a id="l00017" name="l00017"></a><span class="lineno"><a class="line" href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">   17</a></span><a class="code hl_function" href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">I2C::~I2C</a>() {</div>
<div class="line"><a id="l00018" name="l00018"></a><span class="lineno">   18</span>  <span class="comment">// À implémenter</span></div>
<div class="line"><a id="l00019" name="l00019"></a><span class="lineno">   19</span>}</div>
</div>
<div class="line"><a id="l00020" name="l00020"></a><span class="lineno">   20</span> </div>
<div class="foldopen" id="foldopen00021" data-start="{" data-end="}">
<div class="line"><a id="l00021" name="l00021"></a><span class="lineno"><a class="line" href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">   21</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">I2C::writeReg8</a>(<span class="keywordtype">int</span> reg, uint8_t data) {</div>
<div class="line"><a id="l00022" name="l00022"></a><span class="lineno">   22</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">wiringPiI2CWriteReg8</a>(<a class="code hl_variable" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a>, <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">data</a>);</div>
<div class="line"><a id="l00023" name="l00023"></a><span class="lineno">   23</span>}</div>
</div>
<div class="foldopen" id="foldopen00024" data-start="{" data-end="}">
<div class="line"><a id="l00024" name="l00024"></a><span class="lineno"><a class="line" href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">   24</a></span><span class="keywordtype">void</span> <a class="code hl_function" href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">I2C::writeReg16</a>(<span class="keywordtype">int</span> reg, uint16_t data) {</div>
<div class="line"><a id="l00025" name="l00025"></a><span class="lineno">   25</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">wiringPiI2CWriteReg16</a>(<a class="code hl_variable" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a>, <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">invertBytes&lt;uint16_t&gt;</a>(<a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">data</a>));</div>
<div class="line"><a id="l00026" name="l00026"></a><span class="lineno">   26</span>}</div>
</div>
<div class="foldopen" id="foldopen00027" data-start="{" data-end="}">
<div class="line"><a id="l00027" name="l00027"></a><span class="lineno"><a class="line" href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">   27</a></span>uint8_t <a class="code hl_function" href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">I2C::readReg8</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a id="l00028" name="l00028"></a><span class="lineno">   28</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">wiringPiI2CReadReg8</a>(<a class="code hl_variable" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a>);</div>
<div class="line"><a id="l00029" name="l00029"></a><span class="lineno">   29</span>}</div>
</div>
<div class="foldopen" id="foldopen00030" data-start="{" data-end="}">
<div class="line"><a id="l00030" name="l00030"></a><span class="lineno"><a class="line" href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">   30</a></span>uint16_t <a class="code hl_function" href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">I2C::readReg16</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a id="l00031" name="l00031"></a><span class="lineno">   31</span>  <span class="keywordflow">return</span> <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">invertBytes&lt;uint16_t&gt;</a>(<a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">wiringPiI2CReadReg16</a>(<a class="code hl_variable" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a>));</div>
<div class="line"><a id="l00032" name="l00032"></a><span class="lineno">   32</span>}</div>
</div>
<div class="line"><a id="l00033" name="l00033"></a><span class="lineno">   33</span> </div>
<div class="line"><a id="l00034" name="l00034"></a><span class="lineno">   34</span><span class="preprocessor">#else </span><span class="comment">// Pas sur le raspberry pi</span></div>
<div class="line"><a id="l00035" name="l00035"></a><span class="lineno">   35</span> </div>
<div class="line"><a id="l00036" name="l00036"></a><span class="lineno">   36</span><a class="code hl_function" href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">I2C::I2C</a>(<span class="keyword">const</span> uint8_t deviceAddr) {</div>
<div class="line"><a id="l00037" name="l00037"></a><span class="lineno">   37</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">DEBUG</a> &lt;&lt; <span class="stringliteral">&quot;I2C::I2C appellé avec deviceAddr = &quot;</span> &lt;&lt; std::to_string(<a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">deviceAddr</a>)</div>
<div class="line"><a id="l00038" name="l00038"></a><span class="lineno">   38</span>        &lt;&lt; std::endl;</div>
<div class="line"><a id="l00039" name="l00039"></a><span class="lineno">   39</span>}</div>
<div class="line"><a id="l00040" name="l00040"></a><span class="lineno">   40</span> </div>
<div class="line"><a id="l00041" name="l00041"></a><span class="lineno">   41</span><a class="code hl_function" href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">I2C::~I2C</a>() { <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">DEBUG</a> &lt;&lt; <span class="stringliteral">&quot;I2C::~I2C appellé &quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a id="l00042" name="l00042"></a><span class="lineno">   42</span> </div>
<div class="line"><a id="l00043" name="l00043"></a><span class="lineno">   43</span><span class="keywordtype">void</span> <a class="code hl_function" href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">I2C::writeReg8</a>(<span class="keywordtype">int</span> reg, uint8_t data) {</div>
<div class="line"><a id="l00044" name="l00044"></a><span class="lineno">   44</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">DEBUG</a> &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">__FUNCTION__</a> &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a></div>
<div class="line"><a id="l00045" name="l00045"></a><span class="lineno">   45</span>        &lt;&lt; <span class="stringliteral">&quot; et data = &quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">data</a> &lt;&lt; std::endl;</div>
<div class="line"><a id="l00046" name="l00046"></a><span class="lineno">   46</span>}</div>
<div class="line"><a id="l00047" name="l00047"></a><span class="lineno">   47</span><span class="keywordtype">void</span> <a class="code hl_function" href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">I2C::writeReg16</a>(<span class="keywordtype">int</span> reg, uint16_t data) {</div>
<div class="line"><a id="l00048" name="l00048"></a><span class="lineno">   48</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">DEBUG</a> &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">__FUNCTION__</a> &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a></div>
<div class="line"><a id="l00049" name="l00049"></a><span class="lineno">   49</span>        &lt;&lt; <span class="stringliteral">&quot; et data = &quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">data</a> &lt;&lt; std::endl;</div>
<div class="line"><a id="l00050" name="l00050"></a><span class="lineno">   50</span>}</div>
<div class="line"><a id="l00051" name="l00051"></a><span class="lineno">   51</span> </div>
<div class="line"><a id="l00052" name="l00052"></a><span class="lineno">   52</span>uint8_t <a class="code hl_function" href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">I2C::readReg8</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a id="l00053" name="l00053"></a><span class="lineno">   53</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">DEBUG</a> &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">__FUNCTION__</a> &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a> &lt;&lt; std::endl;</div>
<div class="line"><a id="l00054" name="l00054"></a><span class="lineno">   54</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00055" name="l00055"></a><span class="lineno">   55</span>}</div>
<div class="line"><a id="l00056" name="l00056"></a><span class="lineno">   56</span> </div>
<div class="line"><a id="l00057" name="l00057"></a><span class="lineno">   57</span>uint16_t <a class="code hl_function" href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">I2C::readReg16</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a id="l00058" name="l00058"></a><span class="lineno">   58</span>  <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">DEBUG</a> &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">__FUNCTION__</a> &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; <a class="code hl_function" href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">reg</a> &lt;&lt; std::endl;</div>
<div class="line"><a id="l00059" name="l00059"></a><span class="lineno">   59</span>  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a id="l00060" name="l00060"></a><span class="lineno">   60</span>}</div>
<div class="line"><a id="l00061" name="l00061"></a><span class="lineno">   61</span> </div>
<div class="line"><a id="l00062" name="l00062"></a><span class="lineno">   62</span><span class="preprocessor">#endif </span><span class="comment">// __arm__</span></div>
<div class="ttc" id="aI2C_8h_xhtml"><div class="ttname"><a href="I2C_8h.xhtml">I2C.h</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a56648ccb9d05c90d8076931a636b9e03"><div class="ttname"><a href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">I2C::I2C</a></div><div class="ttdeci">I2C(const uint8_t deviceAddr)</div><div class="ttdef"><b>Definition</b> <a href="I2C_8cpp_source.xhtml#l00009">I2C.cpp:9</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a6076b46894ad33eeec883cf4be22e5bb"><div class="ttname"><a href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">I2C::fileDescriptor</a></div><div class="ttdeci">int fileDescriptor</div><div class="ttdef"><b>Definition</b> <a href="I2C_8h_source.xhtml#l00021">I2C.h:21</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a693ee37e6aac13948d6ee30915fae9b7"><div class="ttname"><a href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">I2C::writeReg16</a></div><div class="ttdeci">void writeReg16(int reg, uint16_t data)</div><div class="ttdoc">Écrit une valeur de 16 bit sur un registre.</div><div class="ttdef"><b>Definition</b> <a href="I2C_8cpp_source.xhtml#l00024">I2C.cpp:24</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a7b7d2fd2959101aa562b5d23cee86fe8"><div class="ttname"><a href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">I2C::writeReg8</a></div><div class="ttdeci">void writeReg8(int reg, uint8_t data)</div><div class="ttdoc">Écrit une valeur de 8 bit sur un registre.</div><div class="ttdef"><b>Definition</b> <a href="I2C_8cpp_source.xhtml#l00021">I2C.cpp:21</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_aaf3b3907acf403d5d2a4fac65313bd1b"><div class="ttname"><a href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">I2C::readReg16</a></div><div class="ttdeci">uint16_t readReg16(int reg)</div><div class="ttdoc">Lit une valeur 16 bits d'un registre.</div><div class="ttdef"><b>Definition</b> <a href="I2C_8cpp_source.xhtml#l00030">I2C.cpp:30</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_adb3720e4ef4a115433a2b7600e722228"><div class="ttname"><a href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">I2C::readReg8</a></div><div class="ttdeci">uint8_t readReg8(int reg)</div><div class="ttdoc">Lit une valeur 8 bits d'un registre.</div><div class="ttdef"><b>Definition</b> <a href="I2C_8cpp_source.xhtml#l00027">I2C.cpp:27</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_afaad09fa9bdd23623bddbdcd7585a9fe"><div class="ttname"><a href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">I2C::~I2C</a></div><div class="ttdeci">~I2C()</div><div class="ttdef"><b>Definition</b> <a href="I2C_8cpp_source.xhtml#l00017">I2C.cpp:17</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_afcef607b4a2c5f5b4e9d04875a8f110f"><div class="ttname"><a href="classI2C.xhtml#afcef607b4a2c5f5b4e9d04875a8f110f">I2C::writeData</a></div><div class="ttdeci">void writeData(const T &amp;data)</div><div class="ttdoc">Écrits une donnée sur la communication I2C.</div><div class="ttdef"><b>Definition</b> <a href="I2C_8h_source.xhtml#l00050">I2C.h:50</a></div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Généré par&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.8
</small></address>
</body>
</html>
