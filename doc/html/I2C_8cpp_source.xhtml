<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.17"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>TechnoSTM:  Fichier source de src/I2C.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">TechnoSTM
   </div>
   <div id="projectbrief">Un microscope atomique à effet tunnel</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Généré par Doxygen 1.8.17 -->
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
var searchBox = new SearchBox("searchBox", "search",false,'Recherche');
/* @license-end */
</script>
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',true,false,'search.php','Recherche');
  $(document).ready(function() { init_search(); });
});
/* @license-end */</script>
<div id="main-nav"></div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.xhtml">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">I2C.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="I2C_8cpp.xhtml">Aller à la documentation de ce fichier.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#include &quot;<a class="code" href="I2C_8h.xhtml">I2C.h</a>&quot;</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">/*  Ce fichier ce décompose en deux parties: le code pour le raspberry pi</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> * (#ifdef __arm__) et le code pour les autres ordi. Le code doit être séparé</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * car les ordinateurs n&#39;ont pas accès au GPIO comme le raspberry pi et il</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> * serait impossible de le compiler sinon.</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#ifdef __arm__</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160; </div>
<div class="line"><a name="l00009"></a><span class="lineno"><a class="line" href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">    9</a></span>&#160;<a class="code" href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">I2C::I2C</a>(<span class="keyword">const</span> uint8_t deviceAddr) {</div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;  <a class="code" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a> = wiringPiI2CSetup(deviceAddr);</div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;  <span class="keywordflow">if</span> (!<a class="code" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>) {</div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;    std::cout &lt;&lt; <span class="stringliteral">&quot;wiringPiI2CSetup n&#39;a pas pu être initialisé&quot;</span> &lt;&lt; std::endl;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;    exit(1);</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;  }</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;}</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160; </div>
<div class="line"><a name="l00017"></a><span class="lineno"><a class="line" href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">   17</a></span>&#160;<a class="code" href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">I2C::~I2C</a>() {</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;  <span class="comment">// À implémenter</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;}</div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno"><a class="line" href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">   21</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">I2C::writeReg8</a>(<span class="keywordtype">int</span> reg, uint8_t data) {</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;  wiringPiI2CWriteReg8(<a class="code" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, reg, data);</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;}</div>
<div class="line"><a name="l00024"></a><span class="lineno"><a class="line" href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">   24</a></span>&#160;<span class="keywordtype">void</span> <a class="code" href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">I2C::writeReg16</a>(<span class="keywordtype">int</span> reg, uint16_t data) {</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;  wiringPiI2CWriteReg16(<a class="code" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, reg, invertBytes&lt;uint16_t&gt;(data));</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;}</div>
<div class="line"><a name="l00027"></a><span class="lineno"><a class="line" href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">   27</a></span>&#160;uint8_t <a class="code" href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">I2C::readReg8</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;  <span class="keywordflow">return</span> wiringPiI2CReadReg8(<a class="code" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, reg);</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;}</div>
<div class="line"><a name="l00030"></a><span class="lineno"><a class="line" href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">   30</a></span>&#160;uint16_t <a class="code" href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">I2C::readReg16</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;  <span class="keywordflow">return</span> invertBytes&lt;uint16_t&gt;(wiringPiI2CReadReg16(<a class="code" href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">fileDescriptor</a>, reg));</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;}</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#else // Pas sur le raspberry pi</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160; </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<a class="code" href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">I2C::I2C</a>(<span class="keyword">const</span> uint8_t deviceAddr) {</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;  DEBUG &lt;&lt; <span class="stringliteral">&quot;I2C::I2C appellé avec deviceAddr = &quot;</span> &lt;&lt; std::to_string(deviceAddr)</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;        &lt;&lt; std::endl;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;}</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<a class="code" href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">I2C::~I2C</a>() { DEBUG &lt;&lt; <span class="stringliteral">&quot;I2C::~I2C appellé &quot;</span> &lt;&lt; std::endl; }</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keywordtype">void</span> <a class="code" href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">I2C::writeReg8</a>(<span class="keywordtype">int</span> reg, uint8_t data) {</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  DEBUG &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; reg</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;        &lt;&lt; <span class="stringliteral">&quot; et data = &quot;</span> &lt;&lt; data &lt;&lt; std::endl;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;}</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="keywordtype">void</span> <a class="code" href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">I2C::writeReg16</a>(<span class="keywordtype">int</span> reg, uint16_t data) {</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;  DEBUG &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; reg</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;        &lt;&lt; <span class="stringliteral">&quot; et data = &quot;</span> &lt;&lt; data &lt;&lt; std::endl;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;}</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160; </div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;uint8_t <a class="code" href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">I2C::readReg8</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;  DEBUG &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; reg &lt;&lt; std::endl;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;}</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;uint16_t <a class="code" href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">I2C::readReg16</a>(<span class="keywordtype">int</span> reg) {</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;  DEBUG &lt;&lt; <span class="stringliteral">&quot;I2C::&quot;</span> &lt;&lt; __FUNCTION__ &lt;&lt; <span class="stringliteral">&quot;appellé avec reg = &quot;</span> &lt;&lt; reg &lt;&lt; std::endl;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;  <span class="keywordflow">return</span> 0;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;}</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="preprocessor">#endif // __arm__</span></div>
</div><!-- fragment --></div><!-- contents -->
<div class="ttc" id="aclassI2C_xhtml_a56648ccb9d05c90d8076931a636b9e03"><div class="ttname"><a href="classI2C.xhtml#a56648ccb9d05c90d8076931a636b9e03">I2C::I2C</a></div><div class="ttdeci">I2C(const uint8_t deviceAddr)</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8cpp_source.xhtml#l00009">I2C.cpp:9</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_adb3720e4ef4a115433a2b7600e722228"><div class="ttname"><a href="classI2C.xhtml#adb3720e4ef4a115433a2b7600e722228">I2C::readReg8</a></div><div class="ttdeci">uint8_t readReg8(int reg)</div><div class="ttdoc">Lit une valeur 8 bits d'un registre.</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8cpp_source.xhtml#l00027">I2C.cpp:27</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_afaad09fa9bdd23623bddbdcd7585a9fe"><div class="ttname"><a href="classI2C.xhtml#afaad09fa9bdd23623bddbdcd7585a9fe">I2C::~I2C</a></div><div class="ttdeci">~I2C()</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8cpp_source.xhtml#l00017">I2C.cpp:17</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a6076b46894ad33eeec883cf4be22e5bb"><div class="ttname"><a href="classI2C.xhtml#a6076b46894ad33eeec883cf4be22e5bb">I2C::fileDescriptor</a></div><div class="ttdeci">int fileDescriptor</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8h_source.xhtml#l00021">I2C.h:21</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_aaf3b3907acf403d5d2a4fac65313bd1b"><div class="ttname"><a href="classI2C.xhtml#aaf3b3907acf403d5d2a4fac65313bd1b">I2C::readReg16</a></div><div class="ttdeci">uint16_t readReg16(int reg)</div><div class="ttdoc">Lit une valeur 16 bits d'un registre.</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8cpp_source.xhtml#l00030">I2C.cpp:30</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a693ee37e6aac13948d6ee30915fae9b7"><div class="ttname"><a href="classI2C.xhtml#a693ee37e6aac13948d6ee30915fae9b7">I2C::writeReg16</a></div><div class="ttdeci">void writeReg16(int reg, uint16_t data)</div><div class="ttdoc">Écrit une valeur de 16 bit sur un registre.</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8cpp_source.xhtml#l00024">I2C.cpp:24</a></div></div>
<div class="ttc" id="aclassI2C_xhtml_a7b7d2fd2959101aa562b5d23cee86fe8"><div class="ttname"><a href="classI2C.xhtml#a7b7d2fd2959101aa562b5d23cee86fe8">I2C::writeReg8</a></div><div class="ttdeci">void writeReg8(int reg, uint8_t data)</div><div class="ttdoc">Écrit une valeur de 8 bit sur un registre.</div><div class="ttdef"><b>Definition:</b> <a href="I2C_8cpp_source.xhtml#l00021">I2C.cpp:21</a></div></div>
<div class="ttc" id="aI2C_8h_xhtml"><div class="ttname"><a href="I2C_8h.xhtml">I2C.h</a></div></div>
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Généré par &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.17
</small></address>
</body>
</html>
